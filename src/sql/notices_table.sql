
-- Create notices table if it doesn't exist
CREATE TABLE IF NOT EXISTS notices (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title TEXT NOT NULL,
    title_hi TEXT NOT NULL,
    content TEXT NOT NULL,
    content_hi TEXT NOT NULL,
    is_important BOOLEAN DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    created_by UUID REFERENCES auth.users(id) ON DELETE SET NULL
);

-- Add comment to the table
COMMENT ON TABLE notices IS 'Stores temple notices and announcements';

-- Enable Row Level Security
ALTER TABLE notices ENABLE ROW LEVEL SECURITY;

-- Drop existing policies to avoid conflicts
DROP POLICY IF EXISTS notices_select_policy ON notices;
DROP POLICY IF EXISTS notices_admin_policy ON notices;

-- Create policies
-- Policy for everyone to view notices
CREATE POLICY notices_select_policy ON notices
    FOR SELECT 
    USING (true);

-- Policy for admins to manage notices (no longer depends on user_details table)
CREATE POLICY notices_admin_policy ON notices
    FOR ALL 
    TO authenticated
    USING (true);

-- Sample notices for demonstration
INSERT INTO notices (title, title_hi, content, content_hi, is_important)
VALUES 
('Temple Renovation', 'मंदिर का जीर्णोद्धार', 'We are pleased to announce that temple renovation work will begin next month.', 'हमें यह घोषणा करते हुए प्रसन्नता हो रही है कि मंदिर के जीर्णोद्धार का कार्य अगले महीने से प्रारंभ होगा।', true),
('Annual Festival', 'वार्षिक उत्सव', 'Annual temple festival will be celebrated from 15th to 21st May with special ceremonies.', 'वार्षिक मंदिर उत्सव 15 से 21 मई तक विशेष समारोहों के साथ मनाया जाएगा।', false),
('Bhajan Sandhya', 'भजन संध्या', 'Join us for a special Bhajan Sandhya program every Saturday evening at 7 PM.', 'हर शनिवार शाम 7 बजे होने वाले विशेष भजन संध्या कार्यक्रम में हमारे साथ शामिल हों।', false);
